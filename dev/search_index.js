var documenterSearchIndex = {"docs":
[{"location":"#Progetto-Julia","page":"Home","title":"Progetto Julia","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Progetto di Massimo Rosselli e Valerio Losito","category":"page"},{"location":"funzioni/","page":"Funzioni","title":"Funzioni","text":"createM2\ncreateM1\ngetMatrixVV\ngetMatrixVE\ngetMatrixVF\ngetMatrixEV\ngetMatrixEE\ngetMatrixEF\ngetMatrixFV\ngetMatrixFE\ngetMatrixFF","category":"page"},{"location":"funzioni/#Funzioni.createM2","page":"Funzioni","title":"Funzioni.createM2","text":"createM2(l, t)\n\nCreate an M2 matrix that has the faces on the rows and the vertices on the columns.\n\nArguments:\n\nl: the faces list of object\nt: the number of vertices.\n\nExamples:\n\njulia> createM2([[1, 5, 7, 3], [4, 3, 7, 8], [8, 7, 5, 6],[6, 2, 4, 8],[2, 1, 3, 4],[6, 5, 1, 2]], 8)\n6×8 Array{Int64,2}:\n    1  0  1  0  1  0  1  0\n    0  0  1  1  0  0  1  1\n    0  0  0  0  1  1  1  1\n    0  1  0  1  0  1  0  1\n    1  1  1  1  0  0  0  0\n    1  1  0  0  1  1  0  0\n\n\n\n\n\n","category":"function"},{"location":"funzioni/#Funzioni.createM1","page":"Funzioni","title":"Funzioni.createM1","text":"createM1(m)\n\nCreate an M1 matrix that has the edges on the rows and the vertices on the columns.\n\nArguments:\n\nm: the M2 matrix of faces\n\nExamples:\n\njulia> matrixM2 = createM2([[1, 5, 7, 3], [4, 3, 7, 8], [8, 7, 5, 6],[6, 2, 4, 8],[2, 1, 3, 4],[6, 5, 1, 2]], 8)\n\njulia> createM1(matrixM2)\n12×8 Array{Int64,2}:\n     0  0  1  0  0  0  1  0\n     0  0  0  0  1  0  1  0\n     1  0  1  0  0  0  0  0\n     1  0  0  0  1  0  0  0\n     0  0  0  0  0  0  1  1\n     0  0  0  1  0  0  0  1\n     0  0  1  1  0  0  0  0\n     0  0  0  0  0  1  0  1\n     0  0  0  0  1  1  0  0\n     0  1  0  1  0  0  0  0\n     0  1  0  0  0  1  0  0\n     1  1  0  0  0  0  0  0\n\n\n\n\n\n","category":"function"},{"location":"funzioni/#Funzioni.getMatrixVV","page":"Funzioni","title":"Funzioni.getMatrixVV","text":"getMatrixVV(m)\n\nCreate a VV GBMatrix that has the vertices on the rows and the vertex on the columns from an M1 matrix.\n\nArguments:\n\nm: the M1 matrix of edges\n\nExamples:\n\njulia> matrixM2 = createM2([[1, 5, 7, 3], [4, 3, 7, 8], [8, 7, 5, 6],[6, 2, 4, 8],[2, 1, 3, 4],[6, 5, 1, 2]], 8)\n\njulia> matrixM1 = createM1(matrixM2)\n\njulia> getMatrixVV(matrixM1) \n8x8 GBMatrix{Int64} with 32 stored entries:\n  [1, 1] = 3\n  [1, 2] = 1\n  [1, 3] = 1\n  [1, 5] = 1\n  [2, 1] = 1\n  [2, 2] = 3\n  [2, 4] = 1\n  [2, 6] = 1\n  [3, 1] = 1\n  [3, 3] = 3\n  [3, 4] = 1\n  [3, 7] = 1\n  [4, 2] = 1\n  [4, 3] = 1\n  [4, 4] = 3\n  [4, 8] = 1\n  [5, 1] = 1\n  [5, 5] = 3\n  [5, 6] = 1\n  [5, 7] = 1\n  [6, 2] = 1\n  [6, 5] = 1\n  [6, 6] = 3\n  [6, 8] = 1\n  [7, 3] = 1\n  [7, 5] = 1\n  [7, 7] = 3\n  [7, 8] = 1\n  [8, 4] = 1\n  [8, 6] = 1\n  [8, 7] = 1\n  [8, 8] = 3\n\n\n\n\n\n","category":"function"},{"location":"funzioni/#Funzioni.getMatrixVE","page":"Funzioni","title":"Funzioni.getMatrixVE","text":"getMatrixVE(m)\n\nCreate a VE GBMatrix that has the vertices on the rows and the edges on the columns from an M1 matrix.\n\nArguments:\n\nm: the M1 matrix of edges\n\nExamples:\n\njulia> matrixM2 = createM2([[1, 5, 7, 3], [4, 3, 7, 8], [8, 7, 5, 6],[6, 2, 4, 8],[2, 1, 3, 4],[6, 5, 1, 2]], 8)\n\njulia> matrixM1 = createM1(matrixM2)\n\njulia> getMatrixVE(matrixM1) \n8x12 GBMatrix{Int64} with 24 stored entries:\n  [1, 3]  = 1\n  [1, 4]  = 1\n  [1, 12] = 1\n  [2, 10] = 1\n  [2, 11] = 1\n  [2, 12] = 1\n  [3, 1]  = 1\n  [3, 3]  = 1\n  [3, 7]  = 1\n  [4, 6]  = 1\n  [4, 7]  = 1\n  [4, 10] = 1\n  [5, 2]  = 1\n  [5, 4]  = 1\n  [5, 9]  = 1\n  [6, 8]  = 1\n  [6, 9]  = 1\n  [6, 11] = 1\n  [7, 1]  = 1\n  [7, 2]  = 1\n  [7, 5]  = 1\n  [8, 5]  = 1\n  [8, 6]  = 1\n  [8, 8]  = 1\n\n\n\n\n\n","category":"function"},{"location":"funzioni/#Funzioni.getMatrixVF","page":"Funzioni","title":"Funzioni.getMatrixVF","text":"getMatrixVF(m)\n\nCreate a VF GBMatrix that has the vertices on the rows and the faces on the columns from an M2 matrix.\n\nArguments:\n\nm: the M2 matrix of faces\n\nExamples:\n\njulia> matrixM2 = createM2([[1, 5, 7, 3], [4, 3, 7, 8], [8, 7, 5, 6],[6, 2, 4, 8],[2, 1, 3, 4],[6, 5, 1, 2]], 8)\n\njulia> getMatrixVF(matrixM2)\n8x6 GBMatrix{Int64} with 24 stored entries:\n  [1, 1] = 1\n  [1, 5] = 1\n  [1, 6] = 1\n  [2, 4] = 1\n  [2, 5] = 1\n  [2, 6] = 1\n  [3, 1] = 1\n  [3, 2] = 1\n  [3, 5] = 1\n  [4, 2] = 1\n  [4, 4] = 1\n  [4, 5] = 1\n  [5, 1] = 1\n  [5, 3] = 1\n  [5, 6] = 1\n  [6, 3] = 1\n  [6, 4] = 1\n  [6, 6] = 1\n  [7, 1] = 1\n  [7, 2] = 1\n  [7, 3] = 1\n  [8, 2] = 1\n  [8, 3] = 1\n  [8, 4] = 1\n\n\n\n\n\n","category":"function"},{"location":"funzioni/#Funzioni.getMatrixEV","page":"Funzioni","title":"Funzioni.getMatrixEV","text":"getMatrixEV(m)\n\nCreate a EV GBMatrix that has the edges on the rows and the vertices on the columns from an M1 matrix.\n\nArguments:\n\nm: the M1 matrix of edges\n\nExamples:\n\njulia> matrixM2 = createM2([[1, 5, 7, 3], [4, 3, 7, 8], [8, 7, 5, 6],[6, 2, 4, 8],[2, 1, 3, 4],[6, 5, 1, 2]], 8)\n\njulia> matrixM1 = createM1(matrixM2)\n\njulia> getMatrixEV(matrixM1)\n12x8 GBMatrix{Int64} with 24 stored entries:\n  [ 1, 3] = 1\n  [ 1, 7] = 1\n  [ 2, 5] = 1\n  [ 2, 7] = 1\n  [ 3, 1] = 1\n  [ 3, 3] = 1\n  [ 4, 1] = 1\n  [ 4, 5] = 1\n  [ 5, 7] = 1\n  [ 5, 8] = 1\n  [ 6, 4] = 1\n  [ 6, 8] = 1\n  [ 7, 3] = 1\n  [ 7, 4] = 1\n  [ 8, 6] = 1\n  [ 8, 8] = 1\n  [ 9, 5] = 1\n  [ 9, 6] = 1\n  [10, 2] = 1\n  [10, 4] = 1\n  [11, 2] = 1\n  [11, 6] = 1\n  [12, 1] = 1\n  [12, 2] = 1\n\n\n\n\n\n","category":"function"},{"location":"funzioni/#Funzioni.getMatrixEE","page":"Funzioni","title":"Funzioni.getMatrixEE","text":"getMatrixEE(m)\n\nCreate a EE GBMatrix that has the edges on the rows and columns from an M1 matrix.\n\nArguments:\n\nm: the M1 matrix of edges\n\nExamples:\n\njulia> matrixM2 = createM2([[1, 5, 7, 3], [4, 3, 7, 8], [8, 7, 5, 6],[6, 2, 4, 8],[2, 1, 3, 4],[6, 5, 1, 2]], 8)\n\njulia> matrixM1 = createM1(matrixM2)\n\njulia> getMatrixEE(matrixM1)\n12x12 GBMatrix{Int64} with 60 stored entries:\n  [ 1,  1] = 2\n  [ 1,  2] = 1\n  [ 1,  3] = 1\n  [ 1,  5] = 1\n  [ 1,  7] = 1\n  [ 2,  1] = 1\n  [ 2,  2] = 2\n  [ 2,  4] = 1\n  [ 2,  5] = 1\n  [ 2,  9] = 1\n  [ 3,  1] = 1\n  [ 3,  3] = 2\n  [ 3,  4] = 1\n  [ 3,  7] = 1\n  [ 3, 12] = 1\n  [ 4,  2] = 1\n  ⋮\n  [ 9,  9] = 2\n  [ 9, 11] = 1\n  [10,  6] = 1\n  [10,  7] = 1\n  [10, 10] = 2\n  [10, 11] = 1\n  [10, 12] = 1\n  [11,  8] = 1\n  [11,  9] = 1\n  [11, 10] = 1\n  [11, 11] = 2\n  [11, 12] = 1\n  [12,  3] = 1\n  [12,  4] = 1\n  [12, 10] = 1\n  [12, 11] = 1\n  [12, 12] = 2\n\n\n\n\n\n","category":"function"},{"location":"funzioni/#Funzioni.getMatrixEF","page":"Funzioni","title":"Funzioni.getMatrixEF","text":"getMatrixEF(m,n)\n\nCreate a EF GBMatrix that has the edges on the rows and the faces on the columns from M1 and M2 matrices.\n\nArguments:\n\nm: the M1 matrix of edges\nn: the M2 matrix of faces\n\nExamples:\n\njulia> matrixM2 = createM2([[1, 5, 7, 3], [4, 3, 7, 8], [8, 7, 5, 6],[6, 2, 4, 8],[2, 1, 3, 4],[6, 5, 1, 2]], 8)\n\njulia> matrixM1 = createM1(matrixM2)\n\njulia> getMatrixEF(matrixM1,matrixM2)\n12x6 GBMatrix{Int64} with 48 stored entries:\n  [ 1, 1] = 2\n  [ 1, 2] = 2\n  [ 1, 3] = 1\n  [ 1, 5] = 1\n  [ 2, 1] = 2\n  [ 2, 2] = 1\n  [ 2, 3] = 2\n  [ 2, 6] = 1\n  [ 3, 1] = 2\n  [ 3, 2] = 1\n  [ 3, 5] = 2\n  [ 3, 6] = 1\n  [ 4, 1] = 2\n  [ 4, 3] = 1\n  [ 4, 5] = 1\n  [ 4, 6] = 2\n  ⋮\n  [ 8, 6] = 1\n  [ 9, 1] = 1\n  [ 9, 3] = 2\n  [ 9, 4] = 1\n  [ 9, 6] = 2\n  [10, 2] = 1\n  [10, 4] = 2\n  [10, 5] = 2\n  [10, 6] = 1\n  [11, 3] = 1\n  [11, 4] = 2\n  [11, 5] = 1\n  [11, 6] = 2\n  [12, 1] = 1\n  [12, 4] = 1\n  [12, 5] = 2\n  [12, 6] = 2\n\n\n\n\n\n","category":"function"},{"location":"funzioni/#Funzioni.getMatrixFV","page":"Funzioni","title":"Funzioni.getMatrixFV","text":"getMatrixFV(m)\n\nCreate a FV GBMatrix that has the faces on the rows and the vertices on the columns from an M2 matrix.\n\nArguments:\n\nm: the M2 matrix of faces\n\nExamples:\n\njulia> matrixM2 = createM2([[1, 5, 7, 3], [4, 3, 7, 8], [8, 7, 5, 6],[6, 2, 4, 8],[2, 1, 3, 4],[6, 5, 1, 2]], 8)\n\njulia> getMatrixFV(matrixM2)\n6x8 GBMatrix{Int64} with 24 stored entries:\n  [1, 1] = 1\n  [1, 3] = 1\n  [1, 5] = 1\n  [1, 7] = 1\n  [2, 3] = 1\n  [2, 4] = 1\n  [2, 7] = 1\n  [2, 8] = 1\n  [3, 5] = 1\n  [3, 6] = 1\n  [3, 7] = 1\n  [3, 8] = 1\n  [4, 2] = 1\n  [4, 4] = 1\n  [4, 6] = 1\n  [4, 8] = 1\n  [5, 1] = 1\n  [5, 2] = 1\n  [5, 3] = 1\n  [5, 4] = 1\n  [6, 1] = 1\n  [6, 2] = 1\n  [6, 5] = 1\n  [6, 6] = 1\n\n\n\n\n\n","category":"function"},{"location":"funzioni/#Funzioni.getMatrixFE","page":"Funzioni","title":"Funzioni.getMatrixFE","text":"getMatrixFE(m,n)\n\nCreate a FE GBMatrix that has the faces on the rows and the edges on the columns from M1 and M2 matrices.\n\nArguments:\n\nm: the M1 matrix of edges\nn: the M2 matrix of faces\n\nExamples:\n\njulia> matrixM2 = createM2([[1, 5, 7, 3], [4, 3, 7, 8], [8, 7, 5, 6],[6, 2, 4, 8],[2, 1, 3, 4],[6, 5, 1, 2]], 8)\n\njulia> matrixM1 = createM1(matrixM2)\n\njulia> getMatrixFE(matrixM1,matrixM2)\n6x12 GBMatrix{Int64} with 48 stored entries:\n  [1,  1] = 2\n  [1,  2] = 2\n  [1,  3] = 2\n  [1,  4] = 2\n  [1,  5] = 1\n  [1,  7] = 1\n  [1,  9] = 1\n  [1, 12] = 1\n  [2,  1] = 2\n  [2,  2] = 1\n  [2,  3] = 1\n  [2,  5] = 2\n  [2,  6] = 2\n  [2,  7] = 2\n  [2,  8] = 1\n  [2, 10] = 1\n  ⋮\n  [4, 12] = 1\n  [5,  1] = 1\n  [5,  3] = 2\n  [5,  4] = 1\n  [5,  6] = 1\n  [5,  7] = 2\n  [5, 10] = 2\n  [5, 11] = 1\n  [5, 12] = 2\n  [6,  2] = 1\n  [6,  3] = 1\n  [6,  4] = 2\n  [6,  8] = 1\n  [6,  9] = 2\n  [6, 10] = 1\n  [6, 11] = 2\n  [6, 12] = 2\n\n\n\n\n\n","category":"function"},{"location":"funzioni/#Funzioni.getMatrixFF","page":"Funzioni","title":"Funzioni.getMatrixFF","text":"getMatrixFF(m)\n\nCreate a FF GBMatrix that has the faces on the rows and the columns from an M2 matrix.\n\nArguments:\n\nm: the M2 matrix of faces\n\nExamples:\n\njulia> matrixM2 = createM2([[1, 5, 7, 3], [4, 3, 7, 8], [8, 7, 5, 6],[6, 2, 4, 8],[2, 1, 3, 4],[6, 5, 1, 2]], 8)\n\njulia> getMatrixFF(matrixM2)\n6x6 GBMatrix{Int64} with 30 stored entries:\n  [1, 1] = 4\n  [1, 2] = 2\n  [1, 3] = 2\n  [1, 5] = 2\n  [1, 6] = 2\n  [2, 1] = 2\n  [2, 2] = 4\n  [2, 3] = 2\n  [2, 4] = 2\n  [2, 5] = 2\n  [3, 1] = 2\n  [3, 2] = 2\n  [3, 3] = 4\n  [3, 4] = 2\n  [3, 6] = 2\n  [4, 2] = 2\n  [4, 3] = 2\n  [4, 4] = 4\n  [4, 5] = 2\n  [4, 6] = 2\n  [5, 1] = 2\n  [5, 2] = 2\n  [5, 4] = 2\n  [5, 5] = 4\n  [5, 6] = 2\n  [6, 1] = 2\n  [6, 3] = 2\n  [6, 4] = 2\n  [6, 5] = 2\n  [6, 6] = 4\n\n\n\n\n\n","category":"function"}]
}
